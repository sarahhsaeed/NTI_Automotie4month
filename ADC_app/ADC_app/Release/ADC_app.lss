
ADC_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000068  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000012e  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000012e  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000015d  2**0
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  0000016b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  00000651  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000119  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .text         00000002  000000b8  000000b8  0000012c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000da4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .text.startup.main 00000022  00000076  00000076  000000ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.ADC_Init 0000000c  000000ac  000000ac  00000120  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.ADC_getDigitalValueSynchNonBlocking 0000000c  000000a0  000000a0  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.__dummy_fini 00000002  00000098  00000098  0000010c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__dummy_funcs_on_exit 00000002  0000009e  0000009e  00000112  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_simulator_exit 00000002  0000009a  0000009a  0000010e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.exit    0000000e  00000068  00000068  000000dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text._Exit   00000002  0000009c  0000009c  00000110  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	59 c0       	rjmp	.+178    	; 0xb8 <__bad_interrupt>
   6:	00 00       	nop
   8:	57 c0       	rjmp	.+174    	; 0xb8 <__bad_interrupt>
   a:	00 00       	nop
   c:	55 c0       	rjmp	.+170    	; 0xb8 <__bad_interrupt>
   e:	00 00       	nop
  10:	53 c0       	rjmp	.+166    	; 0xb8 <__bad_interrupt>
  12:	00 00       	nop
  14:	51 c0       	rjmp	.+162    	; 0xb8 <__bad_interrupt>
  16:	00 00       	nop
  18:	4f c0       	rjmp	.+158    	; 0xb8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4d c0       	rjmp	.+154    	; 0xb8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4b c0       	rjmp	.+150    	; 0xb8 <__bad_interrupt>
  22:	00 00       	nop
  24:	49 c0       	rjmp	.+146    	; 0xb8 <__bad_interrupt>
  26:	00 00       	nop
  28:	47 c0       	rjmp	.+142    	; 0xb8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	45 c0       	rjmp	.+138    	; 0xb8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	43 c0       	rjmp	.+134    	; 0xb8 <__bad_interrupt>
  32:	00 00       	nop
  34:	41 c0       	rjmp	.+130    	; 0xb8 <__bad_interrupt>
  36:	00 00       	nop
  38:	3f c0       	rjmp	.+126    	; 0xb8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3d c0       	rjmp	.+122    	; 0xb8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3b c0       	rjmp	.+118    	; 0xb8 <__bad_interrupt>
  42:	00 00       	nop
  44:	39 c0       	rjmp	.+114    	; 0xb8 <__bad_interrupt>
  46:	00 00       	nop
  48:	37 c0       	rjmp	.+110    	; 0xb8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	35 c0       	rjmp	.+106    	; 0xb8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	33 c0       	rjmp	.+102    	; 0xb8 <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0a d0       	rcall	.+20     	; 0x76 <main>
  62:	02 c0       	rjmp	.+4      	; 0x68 <_etext>

00000064 <_exit>:
  64:	f8 94       	cli

00000066 <__stop_program>:
  66:	ff cf       	rjmp	.-2      	; 0x66 <__stop_program>

Disassembly of section .text:

000000b8 <__bad_interrupt>:
  b8:	a3 cf       	rjmp	.-186    	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.startup.main:

00000076 <main>:
  76:	1a d0       	rcall	.+52     	; 0xac <ADC_Init>
  78:	d0 98       	cbi	0x1a, 0	; 26
  7a:	12 d0       	rcall	.+36     	; 0xa0 <ADC_getDigitalValueSynchNonBlocking>
  7c:	ec 01       	movw	r28, r24
  7e:	89 2b       	or	r24, r25
  80:	e1 f3       	breq	.-8      	; 0x7a <main+0x4>
  82:	89 ef       	ldi	r24, 0xF9	; 249
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <main+0x10>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <main+0x16>
  8c:	00 00       	nop
  8e:	08 d0       	rcall	.+16     	; 0xa0 <ADC_getDigitalValueSynchNonBlocking>
  90:	c8 17       	cp	r28, r24
  92:	d9 07       	cpc	r29, r25
  94:	e1 f3       	breq	.-8      	; 0x8e <main+0x18>
  96:	f1 cf       	rjmp	.-30     	; 0x7a <main+0x4>

Disassembly of section .text.ADC_Init:

000000ac <ADC_Init>:
  ac:	3e 9a       	sbi	0x07, 6	; 7
  ae:	37 9a       	sbi	0x06, 7	; 6
  b0:	30 9a       	sbi	0x06, 0	; 6
  b2:	31 9a       	sbi	0x06, 1	; 6
  b4:	32 9a       	sbi	0x06, 2	; 6
  b6:	08 95       	ret

Disassembly of section .text.ADC_getDigitalValueSynchNonBlocking:

000000a0 <ADC_getDigitalValueSynchNonBlocking>:
  a0:	36 9a       	sbi	0x06, 6	; 6
  a2:	36 99       	sbic	0x06, 6	; 6
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <ADC_getDigitalValueSynchNonBlocking+0x2>
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	95 b1       	in	r25, 0x05	; 5
  aa:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000098 <_fini>:
  98:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000009e <__funcs_on_exit>:
  9e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000009a <__simulator_exit>:
  9a:	08 95       	ret

Disassembly of section .text.exit:

00000068 <exit>:
  68:	ec 01       	movw	r28, r24
  6a:	19 d0       	rcall	.+50     	; 0x9e <__funcs_on_exit>
  6c:	15 d0       	rcall	.+42     	; 0x98 <_fini>
  6e:	ce 01       	movw	r24, r28
  70:	14 d0       	rcall	.+40     	; 0x9a <__simulator_exit>
  72:	ce 01       	movw	r24, r28
  74:	13 d0       	rcall	.+38     	; 0x9c <_Exit>

Disassembly of section .text._Exit:

0000009c <_Exit>:
  9c:	e3 df       	rcall	.-58     	; 0x64 <_exit>
