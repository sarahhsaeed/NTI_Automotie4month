
CoolingSystem_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005a4  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000005a4  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000001c  00000000  00000000  000005d3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  000005ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cd1  00000000  00000000  000007af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b75  00000000  00000000  00003480  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000de1  00000000  00000000  00003ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000470  00000000  00000000  00004dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000023e  00000000  00000000  00005248  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f25  00000000  00000000  00005486  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  000063ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000502  00000502  00000596  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000653c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000006  000000ce  000000ce  00000162  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.System_init 00000010  000004e0  000004e0  00000574  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.H_LCD_void_latchByte 000000aa  000001a6  000001a6  0000023a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.H_LCD_void_sendData 00000026  0000047e  0000047e  00000512  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.H_LCD_void_sendCommand 00000026  000004a4  000004a4  00000538  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.H_LCD_void_Init 000000ce  000000d8  000000d8  0000016c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.H_LCD_void_sendString 00000040  0000043e  0000043e  000004d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .progmemx.data.data_pins 00000004  000000d4  000000d4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 23 .text.main    00000006  000004fc  000004fc  00000590  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__vector_16 00000052  00000348  00000348  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.DIO_voidSetPinDirection 0000007c  00000250  00000250  000002e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.DIO_voidSetPinValue 0000007c  000002cc  000002cc  00000360  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.__vector_11 00000052  0000039a  0000039a  0000042e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__vector_10 00000052  000003ec  000003ec  00000480  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .bss.ptr_to_callback_fns 00000004  00800062  00800062  000005a4  2**0
                  ALLOC
 30 .text.libgcc  0000000c  000004f0  000004f0  00000584  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_fini 00000002  0000050a  0000050a  0000059e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__dummy_funcs_on_exit 00000002  0000050c  0000050c  000005a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__dummy_simulator_exit 00000002  0000050e  0000050e  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.exit    00000016  000004ca  000004ca  0000055e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text._Exit   00000004  00000506  00000506  0000059a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
   8:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
   c:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  10:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  14:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  18:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  1c:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  20:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  24:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  28:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__vector_10>
  2c:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__vector_11>
  30:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  34:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  38:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  3c:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_16>
  44:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  48:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  4c:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  50:	0c 94 81 02 	jmp	0x502	; 0x502 <__bad_interrupt>
  54:	34 01       	movw	r6, r8
  56:	3a 01       	movw	r6, r20
  58:	40 01       	movw	r8, r0
  5a:	46 01       	movw	r8, r12
  5c:	4c 01       	movw	r8, r24
  5e:	52 01       	movw	r10, r4
  60:	58 01       	movw	r10, r16
  62:	5e 01       	movw	r10, r28
  64:	72 01       	movw	r14, r4
  66:	78 01       	movw	r14, r16
  68:	7e 01       	movw	r14, r28
  6a:	84 01       	movw	r16, r8
  6c:	8a 01       	movw	r16, r20
  6e:	90 01       	movw	r18, r0
  70:	96 01       	movw	r18, r12
  72:	9c 01       	movw	r18, r24

00000074 <.dinit>:
  74:	00 60       	ori	r16, 0x00	; 0
  76:	00 66       	ori	r16, 0x60	; 96
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf e5       	ldi	r28, 0x5F	; 95
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e4 e7       	ldi	r30, 0x74	; 116
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <main>
  c6:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000502 <__bad_interrupt>:
 502:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.System_init:

000004e0 <System_init>:
 */ 
#include "CoolSys.h"

void System_init(void)
{
	H_LCD_void_Init();
 4e0:	0e 94 6c 00 	call	0xd8	; 0xd8 <H_LCD_void_Init>
	H_LCD_void_sendString("hello");	
 4e4:	6e ec       	ldi	r22, 0xCE	; 206
 4e6:	70 e0       	ldi	r23, 0x00	; 0
 4e8:	80 e0       	ldi	r24, 0x00	; 0
 4ea:	0e 94 1f 02 	call	0x43e	; 0x43e <H_LCD_void_sendString>
 4ee:	08 95       	ret

Disassembly of section .text.H_LCD_void_latchByte:

000001a6 <H_LCD_void_latchByte>:
	_delay_ms(1);
	
}

static void H_LCD_void_latchByte(u8 copy_u8Byte)
{
 1a6:	df 92       	push	r13
 1a8:	ef 92       	push	r14
 1aa:	ff 92       	push	r15
 1ac:	0f 93       	push	r16
 1ae:	1f 93       	push	r17
 1b0:	cf 93       	push	r28
 1b2:	df 93       	push	r29
 1b4:	d8 2e       	mov	r13, r24
	int p=7;
	for (int i=0;i<2;i++)
 1b6:	e1 2c       	mov	r14, r1
 1b8:	f1 2c       	mov	r15, r1
	
}

static void H_LCD_void_latchByte(u8 copy_u8Byte)
{
	int p=7;
 1ba:	07 e0       	ldi	r16, 0x07	; 7
 1bc:	10 e0       	ldi	r17, 0x00	; 0
	for (int i=0;i<2;i++)
 1be:	3c c0       	rjmp	.+120    	; 0x238 <H_LCD_void_latchByte+0x92>
	{
		for (int j=0;j<4;j++)
		{
			DIO_voidSetPinValue(PERIPHERAL_C_BASE,data_pins[j],READBIT(copy_u8Byte,p));
 1c0:	4d 2d       	mov	r20, r13
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	00 2e       	mov	r0, r16
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <H_LCD_void_latchByte+0x26>
 1c8:	55 95       	asr	r21
 1ca:	47 95       	ror	r20
 1cc:	0a 94       	dec	r0
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <H_LCD_void_latchByte+0x22>
 1d0:	41 70       	andi	r20, 0x01	; 1
 1d2:	ce 01       	movw	r24, r28
 1d4:	0d 2e       	mov	r0, r29
 1d6:	00 0c       	add	r0, r0
 1d8:	aa 0b       	sbc	r26, r26
 1da:	8c 52       	subi	r24, 0x2C	; 44
 1dc:	9f 4f       	sbci	r25, 0xFF	; 255
 1de:	af 4f       	sbci	r26, 0xFF	; 255
 1e0:	fc 01       	movw	r30, r24
 1e2:	64 91       	lpm	r22, Z
 1e4:	a7 fd       	sbrc	r26, 7
 1e6:	60 81       	ld	r22, Z
 1e8:	83 e3       	ldi	r24, 0x33	; 51
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
			p--;
 1f0:	01 50       	subi	r16, 0x01	; 1
 1f2:	11 09       	sbc	r17, r1
static void H_LCD_void_latchByte(u8 copy_u8Byte)
{
	int p=7;
	for (int i=0;i<2;i++)
	{
		for (int j=0;j<4;j++)
 1f4:	21 96       	adiw	r28, 0x01	; 1
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <H_LCD_void_latchByte+0x56>
 1f8:	c0 e0       	ldi	r28, 0x00	; 0
 1fa:	d0 e0       	ldi	r29, 0x00	; 0
 1fc:	c4 30       	cpi	r28, 0x04	; 4
 1fe:	d1 05       	cpc	r29, r1
 200:	fc f2       	brlt	.-66     	; 0x1c0 <H_LCD_void_latchByte+0x1a>
		{
			DIO_voidSetPinValue(PERIPHERAL_C_BASE,data_pins[j],READBIT(copy_u8Byte,p));
			p--;
		}
		DIO_voidSetPinValue(PERIPHERAL_D_BASE,EN,1);
 202:	41 e0       	ldi	r20, 0x01	; 1
 204:	62 e0       	ldi	r22, 0x02	; 2
 206:	80 e3       	ldi	r24, 0x30	; 48
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20e:	89 ef       	ldi	r24, 0xF9	; 249
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <H_LCD_void_latchByte+0x6c>
 216:	00 c0       	rjmp	.+0      	; 0x218 <H_LCD_void_latchByte+0x72>
 218:	00 00       	nop
		_delay_ms(1);
		DIO_voidSetPinValue(PERIPHERAL_D_BASE,EN,0);
 21a:	40 e0       	ldi	r20, 0x00	; 0
 21c:	62 e0       	ldi	r22, 0x02	; 2
 21e:	80 e3       	ldi	r24, 0x30	; 48
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
 226:	81 ee       	ldi	r24, 0xE1	; 225
 228:	94 e0       	ldi	r25, 0x04	; 4
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <H_LCD_void_latchByte+0x84>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <H_LCD_void_latchByte+0x8a>
 230:	00 00       	nop
}

static void H_LCD_void_latchByte(u8 copy_u8Byte)
{
	int p=7;
	for (int i=0;i<2;i++)
 232:	9f ef       	ldi	r25, 0xFF	; 255
 234:	e9 1a       	sub	r14, r25
 236:	f9 0a       	sbc	r15, r25
 238:	82 e0       	ldi	r24, 0x02	; 2
 23a:	e8 16       	cp	r14, r24
 23c:	f1 04       	cpc	r15, r1
 23e:	e4 f2       	brlt	.-72     	; 0x1f8 <H_LCD_void_latchByte+0x52>
		DIO_voidSetPinValue(PERIPHERAL_D_BASE,EN,1);
		_delay_ms(1);
		DIO_voidSetPinValue(PERIPHERAL_D_BASE,EN,0);
		_delay_ms(5);
	}
}
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	1f 91       	pop	r17
 246:	0f 91       	pop	r16
 248:	ff 90       	pop	r15
 24a:	ef 90       	pop	r14
 24c:	df 90       	pop	r13
 24e:	08 95       	ret

Disassembly of section .text.H_LCD_void_sendData:

0000047e <H_LCD_void_sendData>:
	H_LCD_void_sendCommand(0x00);
	H_LCD_void_sendCommand(0x06);

}
void H_LCD_void_sendData(u8 copy_u8data )
{
 47e:	cf 93       	push	r28
 480:	c8 2f       	mov	r28, r24
	//put RS(1)
	DIO_voidSetPinValue(PERIPHERAL_D_BASE,RS,1);
 482:	41 e0       	ldi	r20, 0x01	; 1
 484:	60 e0       	ldi	r22, 0x00	; 0
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
	H_LCD_void_latchByte(copy_u8data);
 48e:	8c 2f       	mov	r24, r28
 490:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <H_LCD_void_latchByte>
 494:	89 ef       	ldi	r24, 0xF9	; 249
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	01 97       	sbiw	r24, 0x01	; 1
 49a:	f1 f7       	brne	.-4      	; 0x498 <H_LCD_void_sendData+0x1a>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <H_LCD_void_sendData+0x20>
 49e:	00 00       	nop
	_delay_ms(1);
	
}
 4a0:	cf 91       	pop	r28
 4a2:	08 95       	ret

Disassembly of section .text.H_LCD_void_sendCommand:

000004a4 <H_LCD_void_sendCommand>:
void H_LCD_void_sendCommand(u8 copy_u8command)
{
 4a4:	cf 93       	push	r28
 4a6:	c8 2f       	mov	r28, r24
	//put RS(0)
	DIO_voidSetPinValue(PERIPHERAL_D_BASE,RS,0);
 4a8:	40 e0       	ldi	r20, 0x00	; 0
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	80 e3       	ldi	r24, 0x30	; 48
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
	H_LCD_void_latchByte(copy_u8command);
 4b4:	8c 2f       	mov	r24, r28
 4b6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <H_LCD_void_latchByte>
 4ba:	89 ef       	ldi	r24, 0xF9	; 249
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	f1 f7       	brne	.-4      	; 0x4be <H_LCD_void_sendCommand+0x1a>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <H_LCD_void_sendCommand+0x20>
 4c4:	00 00       	nop
	_delay_ms(1);
	
}
 4c6:	cf 91       	pop	r28
 4c8:	08 95       	ret

Disassembly of section .text.H_LCD_void_Init:

000000d8 <H_LCD_void_Init>:
 u8 Character4[] = { 0x01, 0x03, 0x05, 0x09, 0x09, 0x0B, 0x1B, 0x18 };
 u8 Character5[] = { 0x0A, 0x0A, 0x1F, 0x11, 0x11, 0x0E, 0x04, 0x04 };
 u8 Character6[] = { 0x00, 0x00, 0x0A, 0x00, 0x04, 0x11, 0x0E, 0x00 };
 u8 Character7[] = { 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x04, 0x00, 0x00 };
void H_LCD_void_Init(void)
{
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
	EN_DIR(1);
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	62 e0       	ldi	r22, 0x02	; 2
  e0:	80 e3       	ldi	r24, 0x30	; 48
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	0e 94 28 01 	call	0x250	; 0x250 <DIO_voidSetPinDirection>
	RS_DIR(1);
  e8:	41 e0       	ldi	r20, 0x01	; 1
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	80 e3       	ldi	r24, 0x30	; 48
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 28 01 	call	0x250	; 0x250 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PERIPHERAL_D_BASE,EN,1);
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	62 e0       	ldi	r22, 0x02	; 2
  f8:	80 e3       	ldi	r24, 0x30	; 48
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 28 01 	call	0x250	; 0x250 <DIO_voidSetPinDirection>
	for (int i=0;i<4;i++)
 100:	c0 e0       	ldi	r28, 0x00	; 0
 102:	d0 e0       	ldi	r29, 0x00	; 0
 104:	11 c0       	rjmp	.+34     	; 0x128 <H_LCD_void_Init+0x50>
	{
		DIO_voidSetPinDirection(PERIPHERAL_C_BASE,data_pins[i],1);	
 106:	ce 01       	movw	r24, r28
 108:	0d 2e       	mov	r0, r29
 10a:	00 0c       	add	r0, r0
 10c:	aa 0b       	sbc	r26, r26
 10e:	8c 52       	subi	r24, 0x2C	; 44
 110:	9f 4f       	sbci	r25, 0xFF	; 255
 112:	af 4f       	sbci	r26, 0xFF	; 255
 114:	fc 01       	movw	r30, r24
 116:	64 91       	lpm	r22, Z
 118:	a7 fd       	sbrc	r26, 7
 11a:	60 81       	ld	r22, Z
 11c:	41 e0       	ldi	r20, 0x01	; 1
 11e:	83 e3       	ldi	r24, 0x33	; 51
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 28 01 	call	0x250	; 0x250 <DIO_voidSetPinDirection>
void H_LCD_void_Init(void)
{
	EN_DIR(1);
	RS_DIR(1);
	DIO_voidSetPinDirection(PERIPHERAL_D_BASE,EN,1);
	for (int i=0;i<4;i++)
 126:	21 96       	adiw	r28, 0x01	; 1
 128:	c4 30       	cpi	r28, 0x04	; 4
 12a:	d1 05       	cpc	r29, r1
 12c:	64 f3       	brlt	.-40     	; 0x106 <H_LCD_void_Init+0x2e>
 12e:	83 ed       	ldi	r24, 0xD3	; 211
 130:	90 e3       	ldi	r25, 0x30	; 48
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <H_LCD_void_Init+0x5a>
 136:	00 c0       	rjmp	.+0      	; 0x138 <H_LCD_void_Init+0x60>
 138:	00 00       	nop
	{
		DIO_voidSetPinDirection(PERIPHERAL_C_BASE,data_pins[i],1);	
	}
	_delay_ms(50);
	DIO_voidSetPinValue(PERIPHERAL_D_BASE,RS,0);
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	80 e3       	ldi	r24, 0x30	; 48
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 66 01 	call	0x2cc	; 0x2cc <DIO_voidSetPinValue>
	H_LCD_void_sendCommand(0x22);
 146:	82 e2       	ldi	r24, 0x22	; 34
 148:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
	H_LCD_void_sendCommand(0x02);
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
	H_LCD_void_sendCommand(0x08);
 152:	88 e0       	ldi	r24, 0x08	; 8
 154:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
 158:	89 ef       	ldi	r24, 0xF9	; 249
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <H_LCD_void_Init+0x84>
 160:	00 c0       	rjmp	.+0      	; 0x162 <H_LCD_void_Init+0x8a>
 162:	00 00       	nop
	_delay_ms(1);
	H_LCD_void_sendCommand(0x00);
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
	H_LCD_void_sendCommand(0x0C);//display on off 0E
 16a:	8c e0       	ldi	r24, 0x0C	; 12
 16c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
 170:	89 ef       	ldi	r24, 0xF9	; 249
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <H_LCD_void_Init+0x9c>
 178:	00 c0       	rjmp	.+0      	; 0x17a <H_LCD_void_Init+0xa2>
 17a:	00 00       	nop
	_delay_ms(1);
	H_LCD_void_sendCommand(0x00);
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
	H_LCD_void_sendCommand(0x01);
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
 188:	8d ee       	ldi	r24, 0xED	; 237
 18a:	92 e0       	ldi	r25, 0x02	; 2
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <H_LCD_void_Init+0xb4>
 190:	00 c0       	rjmp	.+0      	; 0x192 <H_LCD_void_Init+0xba>
 192:	00 00       	nop
	_delay_ms(3);
	H_LCD_void_sendCommand(0x00);
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>
	H_LCD_void_sendCommand(0x06);
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <H_LCD_void_sendCommand>

}
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

Disassembly of section .text.H_LCD_void_sendString:

0000043e <H_LCD_void_sendString>:
		_delay_ms(5);
	}
}

void H_LCD_void_sendString(const s8 * pstr)
{
 43e:	cf 92       	push	r12
 440:	df 92       	push	r13
 442:	ef 92       	push	r14
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	6b 01       	movw	r12, r22
 44a:	e8 2e       	mov	r14, r24
	int i=0;
 44c:	c0 e0       	ldi	r28, 0x00	; 0
 44e:	d0 e0       	ldi	r29, 0x00	; 0
	while(pstr[i] != '\0'){
 450:	03 c0       	rjmp	.+6      	; 0x458 <H_LCD_void_sendString+0x1a>
		H_LCD_void_sendData(pstr[i]);
 452:	0e 94 3f 02 	call	0x47e	; 0x47e <H_LCD_void_sendData>
		i++;
 456:	21 96       	adiw	r28, 0x01	; 1
}

void H_LCD_void_sendString(const s8 * pstr)
{
	int i=0;
	while(pstr[i] != '\0'){
 458:	ae 2d       	mov	r26, r14
 45a:	c6 01       	movw	r24, r12
 45c:	8c 0f       	add	r24, r28
 45e:	9d 1f       	adc	r25, r29
 460:	a1 1d       	adc	r26, r1
 462:	d7 fd       	sbrc	r29, 7
 464:	aa 95       	dec	r26
 466:	fc 01       	movw	r30, r24
 468:	84 91       	lpm	r24, Z
 46a:	a7 fd       	sbrc	r26, 7
 46c:	80 81       	ld	r24, Z
 46e:	81 11       	cpse	r24, r1
 470:	f0 cf       	rjmp	.-32     	; 0x452 <H_LCD_void_sendString+0x14>
		H_LCD_void_sendData(pstr[i]);
		i++;
	}
	
}
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	ef 90       	pop	r14
 478:	df 90       	pop	r13
 47a:	cf 90       	pop	r12
 47c:	08 95       	ret

Disassembly of section .text.main:

000004fc <main>:
 */ 
#include "HAL/CoolingSystem/CoolSys.h"

int main(void)
{
	System_init();
 4fc:	0e 94 70 02 	call	0x4e0	; 0x4e0 <System_init>
 500:	ff cf       	rjmp	.-2      	; 0x500 <main+0x4>

Disassembly of section .text.__vector_16:

00000348 <__vector_16>:
	SETBIT(ADCSRA,ADIE); //enable inturupt
	
	ptr_to_callback_fn=ptr_to_fn;	
}
ISR(ADC_vect)
{
 348:	1f 92       	push	r1
 34a:	0f 92       	push	r0
 34c:	0f b6       	in	r0, 0x3f	; 63
 34e:	0f 92       	push	r0
 350:	11 24       	eor	r1, r1
 352:	2f 93       	push	r18
 354:	3f 93       	push	r19
 356:	4f 93       	push	r20
 358:	5f 93       	push	r21
 35a:	6f 93       	push	r22
 35c:	7f 93       	push	r23
 35e:	8f 93       	push	r24
 360:	9f 93       	push	r25
 362:	af 93       	push	r26
 364:	bf 93       	push	r27
 366:	ef 93       	push	r30
 368:	ff 93       	push	r31
	if (ptr_to_callback_fn!=NULL)
 36a:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 36e:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 372:	30 97       	sbiw	r30, 0x00	; 0
 374:	09 f0       	breq	.+2      	; 0x378 <__vector_16+0x30>
	{
		ptr_to_callback_fn();
 376:	09 95       	icall
	}
}
 378:	ff 91       	pop	r31
 37a:	ef 91       	pop	r30
 37c:	bf 91       	pop	r27
 37e:	af 91       	pop	r26
 380:	9f 91       	pop	r25
 382:	8f 91       	pop	r24
 384:	7f 91       	pop	r23
 386:	6f 91       	pop	r22
 388:	5f 91       	pop	r21
 38a:	4f 91       	pop	r20
 38c:	3f 91       	pop	r19
 38e:	2f 91       	pop	r18
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

Disassembly of section .text.DIO_voidSetPinDirection:

00000250 <DIO_voidSetPinDirection>:
 *
 * Created: 10/25/2023 4:07:36 PM
 *  Author: Sarah saeed
 */ 
#include "DIO_interface.h"
void DIO_voidSetPinDirection( GPIO_peripherals *ptr, u8 Copy_u8PinId, u8 Copy_u8Direction){
 250:	0f 93       	push	r16
 252:	1f 93       	push	r17

	switch (Copy_u8PinId){
 254:	06 2f       	mov	r16, r22
 256:	10 e0       	ldi	r17, 0x00	; 0
 258:	08 30       	cpi	r16, 0x08	; 8
 25a:	11 05       	cpc	r17, r1
 25c:	a0 f5       	brcc	.+104    	; 0x2c6 <DIO_voidSetPinDirection+0x76>
 25e:	f8 01       	movw	r30, r16
 260:	e6 5d       	subi	r30, 0xD6	; 214
 262:	ff 4f       	sbci	r31, 0xFF	; 255
 264:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__tablejump2__>
		case 0:
		ptr->DDR.Bit.B0 = Copy_u8Direction;
 268:	fc 01       	movw	r30, r24
 26a:	21 81       	ldd	r18, Z+1	; 0x01
 26c:	40 fb       	bst	r20, 0
 26e:	20 f9       	bld	r18, 0
 270:	21 83       	std	Z+1, r18	; 0x01
		break;
 272:	29 c0       	rjmp	.+82     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 1:
		ptr->DDR.Bit.B1 = Copy_u8Direction;
 274:	fc 01       	movw	r30, r24
 276:	21 81       	ldd	r18, Z+1	; 0x01
 278:	40 fb       	bst	r20, 0
 27a:	21 f9       	bld	r18, 1
 27c:	21 83       	std	Z+1, r18	; 0x01
		break;
 27e:	23 c0       	rjmp	.+70     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 2:
		ptr->DDR.Bit.B2 = Copy_u8Direction;
 280:	fc 01       	movw	r30, r24
 282:	21 81       	ldd	r18, Z+1	; 0x01
 284:	40 fb       	bst	r20, 0
 286:	22 f9       	bld	r18, 2
 288:	21 83       	std	Z+1, r18	; 0x01
		break;
 28a:	1d c0       	rjmp	.+58     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 3:
		ptr->DDR.Bit.B3 = Copy_u8Direction;
 28c:	fc 01       	movw	r30, r24
 28e:	21 81       	ldd	r18, Z+1	; 0x01
 290:	40 fb       	bst	r20, 0
 292:	23 f9       	bld	r18, 3
 294:	21 83       	std	Z+1, r18	; 0x01
		break;
 296:	17 c0       	rjmp	.+46     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 4:
		ptr->DDR.Bit.B4 = Copy_u8Direction;
 298:	fc 01       	movw	r30, r24
 29a:	21 81       	ldd	r18, Z+1	; 0x01
 29c:	40 fb       	bst	r20, 0
 29e:	24 f9       	bld	r18, 4
 2a0:	21 83       	std	Z+1, r18	; 0x01
		break;
 2a2:	11 c0       	rjmp	.+34     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 5:
		ptr->DDR.Bit.B5 = Copy_u8Direction;
 2a4:	fc 01       	movw	r30, r24
 2a6:	21 81       	ldd	r18, Z+1	; 0x01
 2a8:	40 fb       	bst	r20, 0
 2aa:	25 f9       	bld	r18, 5
 2ac:	21 83       	std	Z+1, r18	; 0x01
		break;
 2ae:	0b c0       	rjmp	.+22     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 6:
		ptr->DDR.Bit.B6= Copy_u8Direction;
 2b0:	fc 01       	movw	r30, r24
 2b2:	21 81       	ldd	r18, Z+1	; 0x01
 2b4:	40 fb       	bst	r20, 0
 2b6:	26 f9       	bld	r18, 6
 2b8:	21 83       	std	Z+1, r18	; 0x01
		break;
 2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <DIO_voidSetPinDirection+0x76>
		case 7:
		ptr->DDR.Bit.B7 = Copy_u8Direction;
 2bc:	fc 01       	movw	r30, r24
 2be:	21 81       	ldd	r18, Z+1	; 0x01
 2c0:	40 fb       	bst	r20, 0
 2c2:	27 f9       	bld	r18, 7
 2c4:	21 83       	std	Z+1, r18	; 0x01
		break;
		default:
		break;
	}
}
 2c6:	1f 91       	pop	r17
 2c8:	0f 91       	pop	r16
 2ca:	08 95       	ret

Disassembly of section .text.DIO_voidSetPinValue:

000002cc <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(GPIO_peripherals *ptr, u8 Copy_u8PinId, u8 Copy_u8Value){
 2cc:	0f 93       	push	r16
 2ce:	1f 93       	push	r17
	switch (Copy_u8PinId){
 2d0:	06 2f       	mov	r16, r22
 2d2:	10 e0       	ldi	r17, 0x00	; 0
 2d4:	08 30       	cpi	r16, 0x08	; 8
 2d6:	11 05       	cpc	r17, r1
 2d8:	a0 f5       	brcc	.+104    	; 0x342 <DIO_voidSetPinValue+0x76>
 2da:	f8 01       	movw	r30, r16
 2dc:	ee 5c       	subi	r30, 0xCE	; 206
 2de:	ff 4f       	sbci	r31, 0xFF	; 255
 2e0:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__tablejump2__>
		case 0:
		ptr->PORT.Bit.B0 = Copy_u8Value;
 2e4:	fc 01       	movw	r30, r24
 2e6:	22 81       	ldd	r18, Z+2	; 0x02
 2e8:	40 fb       	bst	r20, 0
 2ea:	20 f9       	bld	r18, 0
 2ec:	22 83       	std	Z+2, r18	; 0x02
		break;
 2ee:	29 c0       	rjmp	.+82     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 1:
		ptr->PORT.Bit.B1 = Copy_u8Value;
 2f0:	fc 01       	movw	r30, r24
 2f2:	22 81       	ldd	r18, Z+2	; 0x02
 2f4:	40 fb       	bst	r20, 0
 2f6:	21 f9       	bld	r18, 1
 2f8:	22 83       	std	Z+2, r18	; 0x02
		break;
 2fa:	23 c0       	rjmp	.+70     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 2:
		ptr->PORT.Bit.B2 = Copy_u8Value;
 2fc:	fc 01       	movw	r30, r24
 2fe:	22 81       	ldd	r18, Z+2	; 0x02
 300:	40 fb       	bst	r20, 0
 302:	22 f9       	bld	r18, 2
 304:	22 83       	std	Z+2, r18	; 0x02
		break;
 306:	1d c0       	rjmp	.+58     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 3:
		ptr->PORT.Bit.B3 = Copy_u8Value;
 308:	fc 01       	movw	r30, r24
 30a:	22 81       	ldd	r18, Z+2	; 0x02
 30c:	40 fb       	bst	r20, 0
 30e:	23 f9       	bld	r18, 3
 310:	22 83       	std	Z+2, r18	; 0x02
		break;
 312:	17 c0       	rjmp	.+46     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 4:
		ptr->PORT.Bit.B4 = Copy_u8Value;
 314:	fc 01       	movw	r30, r24
 316:	22 81       	ldd	r18, Z+2	; 0x02
 318:	40 fb       	bst	r20, 0
 31a:	24 f9       	bld	r18, 4
 31c:	22 83       	std	Z+2, r18	; 0x02
		break;
 31e:	11 c0       	rjmp	.+34     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 5:
		ptr->PORT.Bit.B5 = Copy_u8Value;
 320:	fc 01       	movw	r30, r24
 322:	22 81       	ldd	r18, Z+2	; 0x02
 324:	40 fb       	bst	r20, 0
 326:	25 f9       	bld	r18, 5
 328:	22 83       	std	Z+2, r18	; 0x02
		break;
 32a:	0b c0       	rjmp	.+22     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 6:
		ptr->PORT.Bit.B6 = Copy_u8Value;
 32c:	fc 01       	movw	r30, r24
 32e:	22 81       	ldd	r18, Z+2	; 0x02
 330:	40 fb       	bst	r20, 0
 332:	26 f9       	bld	r18, 6
 334:	22 83       	std	Z+2, r18	; 0x02
		break;
 336:	05 c0       	rjmp	.+10     	; 0x342 <DIO_voidSetPinValue+0x76>
		case 7:
		ptr->PORT.Bit.B7 = Copy_u8Value;
 338:	fc 01       	movw	r30, r24
 33a:	22 81       	ldd	r18, Z+2	; 0x02
 33c:	40 fb       	bst	r20, 0
 33e:	27 f9       	bld	r18, 7
 340:	22 83       	std	Z+2, r18	; 0x02
		break;
		default:
		break;
	}

}
 342:	1f 91       	pop	r17
 344:	0f 91       	pop	r16
 346:	08 95       	ret

Disassembly of section .text.__vector_11:

0000039a <__vector_11>:
			break;
		}
	}
}
ISR(TIMER0_OVF_vect)
{  
 39a:	1f 92       	push	r1
 39c:	0f 92       	push	r0
 39e:	0f b6       	in	r0, 0x3f	; 63
 3a0:	0f 92       	push	r0
 3a2:	11 24       	eor	r1, r1
 3a4:	2f 93       	push	r18
 3a6:	3f 93       	push	r19
 3a8:	4f 93       	push	r20
 3aa:	5f 93       	push	r21
 3ac:	6f 93       	push	r22
 3ae:	7f 93       	push	r23
 3b0:	8f 93       	push	r24
 3b2:	9f 93       	push	r25
 3b4:	af 93       	push	r26
 3b6:	bf 93       	push	r27
 3b8:	ef 93       	push	r30
 3ba:	ff 93       	push	r31
	
	if(!ptr_to_callback_fns[0]==NULL){
 3bc:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <ptr_to_callback_fns>
 3c0:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <ptr_to_callback_fns+0x1>
 3c4:	30 97       	sbiw	r30, 0x00	; 0
 3c6:	09 f0       	breq	.+2      	; 0x3ca <__vector_11+0x30>
		ptr_to_callback_fns[0]();
 3c8:	09 95       	icall
	}
}
 3ca:	ff 91       	pop	r31
 3cc:	ef 91       	pop	r30
 3ce:	bf 91       	pop	r27
 3d0:	af 91       	pop	r26
 3d2:	9f 91       	pop	r25
 3d4:	8f 91       	pop	r24
 3d6:	7f 91       	pop	r23
 3d8:	6f 91       	pop	r22
 3da:	5f 91       	pop	r21
 3dc:	4f 91       	pop	r20
 3de:	3f 91       	pop	r19
 3e0:	2f 91       	pop	r18
 3e2:	0f 90       	pop	r0
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	0f 90       	pop	r0
 3e8:	1f 90       	pop	r1
 3ea:	18 95       	reti

Disassembly of section .text.__vector_10:

000003ec <__vector_10>:


ISR(TIMER0_COMP_vect)
{
 3ec:	1f 92       	push	r1
 3ee:	0f 92       	push	r0
 3f0:	0f b6       	in	r0, 0x3f	; 63
 3f2:	0f 92       	push	r0
 3f4:	11 24       	eor	r1, r1
 3f6:	2f 93       	push	r18
 3f8:	3f 93       	push	r19
 3fa:	4f 93       	push	r20
 3fc:	5f 93       	push	r21
 3fe:	6f 93       	push	r22
 400:	7f 93       	push	r23
 402:	8f 93       	push	r24
 404:	9f 93       	push	r25
 406:	af 93       	push	r26
 408:	bf 93       	push	r27
 40a:	ef 93       	push	r30
 40c:	ff 93       	push	r31
	
	if(!ptr_to_callback_fns[1]==NULL){
 40e:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <ptr_to_callback_fns+0x2>
 412:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <ptr_to_callback_fns+0x3>
 416:	30 97       	sbiw	r30, 0x00	; 0
 418:	09 f0       	breq	.+2      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
		ptr_to_callback_fns[1]();
 41a:	09 95       	icall
		
	}

}
 41c:	ff 91       	pop	r31
 41e:	ef 91       	pop	r30
 420:	bf 91       	pop	r27
 422:	af 91       	pop	r26
 424:	9f 91       	pop	r25
 426:	8f 91       	pop	r24
 428:	7f 91       	pop	r23
 42a:	6f 91       	pop	r22
 42c:	5f 91       	pop	r21
 42e:	4f 91       	pop	r20
 430:	3f 91       	pop	r19
 432:	2f 91       	pop	r18
 434:	0f 90       	pop	r0
 436:	0f be       	out	0x3f, r0	; 63
 438:	0f 90       	pop	r0
 43a:	1f 90       	pop	r1
 43c:	18 95       	reti

Disassembly of section .text.libgcc:

000004f0 <__tablejump2__>:
 4f0:	ee 0f       	add	r30, r30
 4f2:	ff 1f       	adc	r31, r31
 4f4:	05 90       	lpm	r0, Z+
 4f6:	f4 91       	lpm	r31, Z
 4f8:	e0 2d       	mov	r30, r0
 4fa:	09 94       	ijmp

Disassembly of section .text.__dummy_fini:

0000050a <_fini>:
 50a:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000050c <__funcs_on_exit>:
 50c:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000050e <__simulator_exit>:
 50e:	08 95       	ret

Disassembly of section .text.exit:

000004ca <exit>:
 4ca:	ec 01       	movw	r28, r24
 4cc:	0e 94 86 02 	call	0x50c	; 0x50c <__funcs_on_exit>
 4d0:	0e 94 85 02 	call	0x50a	; 0x50a <_fini>
 4d4:	ce 01       	movw	r24, r28
 4d6:	0e 94 87 02 	call	0x50e	; 0x50e <__simulator_exit>
 4da:	ce 01       	movw	r24, r28
 4dc:	0e 94 83 02 	call	0x506	; 0x506 <_Exit>

Disassembly of section .text._Exit:

00000506 <_Exit>:
 506:	0e 94 65 00 	call	0xca	; 0xca <_exit>
