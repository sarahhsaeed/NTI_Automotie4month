
Timer0_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000106  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000106  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000135  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000143  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000763  00000000  00000000  00000163  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e1  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000152  00000000  00000000  00000da7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000efc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000196  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000010b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000082  00000082  000000f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    00000002  0000008a  0000008a  000000fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__dummy_fini 00000002  0000008c  0000008c  00000100  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_funcs_on_exit 00000002  0000008e  0000008e  00000102  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_simulator_exit 00000002  00000090  00000090  00000104  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.exit    00000016  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text._Exit   00000004  00000086  00000086  000000fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
   8:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
   c:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  10:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  14:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  18:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  1c:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  20:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  24:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  28:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  2c:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  30:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  34:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  38:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  3c:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  40:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  44:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  48:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  4c:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>
  50:	0c 94 41 00 	jmp	0x82	; 0x82 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 45 00 	call	0x8a	; 0x8a <main>
  64:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000082 <__bad_interrupt>:
  82:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

0000008a <main>:

#include <xc.h>
#include "MCAL/GIE/GIE_interface.h"
#include "MCAL/TIMER0/Timer0_interface.h"
int main(void)
{
  8a:	ff cf       	rjmp	.-2      	; 0x8a <main>

Disassembly of section .text.__dummy_fini:

0000008c <_fini>:
  8c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000008e <__funcs_on_exit>:
  8e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000090 <__simulator_exit>:
  90:	08 95       	ret

Disassembly of section .text.exit:

0000006c <exit>:
  6c:	ec 01       	movw	r28, r24
  6e:	0e 94 47 00 	call	0x8e	; 0x8e <__funcs_on_exit>
  72:	0e 94 46 00 	call	0x8c	; 0x8c <_fini>
  76:	ce 01       	movw	r24, r28
  78:	0e 94 48 00 	call	0x90	; 0x90 <__simulator_exit>
  7c:	ce 01       	movw	r24, r28
  7e:	0e 94 43 00 	call	0x86	; 0x86 <_Exit>

Disassembly of section .text._Exit:

00000086 <_Exit>:
  86:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
